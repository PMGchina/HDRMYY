<?xml version="1.0" encoding="UTF-8"?>
<ehcache name="es">
	<diskStore path="java.io.tmpdir" />

	<!-- 
		name:缓存名称
		maxElementsInMemory:缓存最大数目 
		maxElementsOnDisk:硬盘最大缓存个数
		eternal:对象是否永久有效,一但设置了,timeout将不起作用 
		overflowToDisk:是否保存到磁盘,当系统宕机时 
		timeToIdleSeconds:设置对象在失效前的允许闲置时间(单位:秒)
			仅当eternal=false对象不是永久有效时使用，可选属性，默认值是0，也就是可闲置时间无穷大 
		timeToLiveSeconds:设置对象在失效前允许存活时间(单位:秒)最大时间介于创建时间和失效时间之间
			仅当eternal=false对象不是永久有效时使用，默认是0.，也就是对象存活时间无穷大 
		diskPersistent:是否缓存虚拟机重启期数据,默认值为false
		diskSpoolBufferSizeMB:这个参数设置DiskStore(磁盘缓存)的缓存区大小
			默认是30MB每个Cache都应该有自己的一个缓冲区 
		diskExpiryThreadIntervalSeconds:磁盘失效线程运行时间间隔，默认是120秒 
		memoryStoreEvictionPolicy:当达到maxElementsInMemory限制时，
			Ehcache将会根据指定的策略去清理内存默认策略是LRU(最近最少使用)
			你可以设置为FIFO(先进先出)或是LFU(较少使用) 
		clearOnFlush:内存数量最大时是否清除 
		memoryStoreEvictionPolicy: 
			Ehcache的三种清空策略: 
				FIFO(first in first out)先进先出 
				LFU(Less Frequently Used)一直以来最少被使用的
					缓存的元素有一个hit属性，hit值最小的将会被清出缓存 
				LRU(Least Recently Used)最近最少使用的
					缓存的元素有一个时间戳，当缓存容量满了
					而又需要腾出地方来缓存新的元素的时候
					那么现有缓存元素中时间戳离当前时间最远的元素将被清出缓存
	 -->
	<defaultCache maxElementsInMemory="10000" eternal="false"
		timeToIdleSeconds="120" timeToLiveSeconds="120" overflowToDisk="false"
		diskPersistent="false" diskExpiryThreadIntervalSeconds="120" />
	
	<cache name="roleCache" maxElementsInMemory="100" eternal="false" timeToLiveSeconds="3600" timeToIdleSeconds="3600" overflowToDisk="true"/>
	<cache name="permissionCache" maxElementsInMemory="500" eternal="false" timeToLiveSeconds="3600" timeToIdleSeconds="3600" overflowToDisk="true"/>
</ehcache>